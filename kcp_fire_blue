#! /bin/bash
#
#  \Author Hans Kramer
#
#  \Date   March 2018
#
#  \Code   Krrrrrrazy color prompt
#
#  \Usage  source kcp_fire
#

function kcp() {
    if (( ${#1} < 3 )) ; then
	# not implemented yet
        return
    fi
    printf "\001\x1b[38;2;255;255;255m\002"

    (( sect_len = ${#1} / 3 ))
    (( sect_len = sect_len > 5 ? 5 : sect_len ))
   
    (( n_seg     = ${#1}/sect_len  ))
    (( s_seg     = n_seg/2         ))
    (( m_seg_len = ${#1}-s_seg*2*sect_len ))


    (( bg_red_next  = 0 ))
    (( c = s_seg*sect_len ))
    for (( i=0; c>0; i++,c-- )); do
	(( offset = $i % sect_len ))
	(( $i % sect_len )) || {
	    (( bg_red_start  = bg_red_next ))
            (( bg_red_next   = 55 + RANDOM % 200  ))
	}
	(( bg_red = (($bg_red_next-$bg_red_start)/(sect_len-1))*$offset + $bg_red_start ))
        printf "\001\x1b[48;2;0;0;${bg_red}m\002${1:$i:1}"
    done

    (( c = m_seg_len ))
    for (( ; c>0; i++,c-- )); do
	(( offset = $i % sect_len ))
	(( $i % sect_len )) || {
	    (( bg_red_start  = bg_red_next ))
            (( bg_red_next   = 55 + RANDOM % 200  ))
	}
        (( bg_red = (($bg_red_next-$bg_red_start)/sect_len)*$offset + $bg_red_start ))
        printf "\001\x1b[48;2;0;0;${bg_red}m\002${1:$i:1}"
    done
    (( c = s_seg*sect_len ))
    for (( offset=0; c>0; i++,c--,offset++ )); do
	(( offset = $offset % sect_len ))
	if (( $i > ${#1}-sect_len-1 )) ; then
	    (( bg_red_start  = bg_red_next ))
	    if (( $i+1 != ${#1} )) ; then
	        (( bg_blue  = 0 ))
	        (( bg_green = 0 ))
	    else
	        (( bg_blue  = 35 ))
	        (( bg_green = 35 ))
            fi
	    (( bg_red = ((35-$bg_red_start)/(sect_len-1))*$offset + $bg_red_start ))
            printf "\001\x1b[48;2;${bg_blue};${bg_green};${bg_red}m\002${1:$i:1}"
        else
            (( $c % sect_len )) || {
	        (( bg_red_start  = bg_red_next ))
                (( bg_red_next   = 55 + RANDOM % 200  ))
	    }
            (( bg_red = (($bg_red_next-$bg_red_start)/(sect_len-1))*$offset + $bg_red_start ))
            printf "\001\x1b[48;2;0;0;${bg_red}m\002${1:$i:1}"
	fi
        #printf "\001\x1b[48;2;0;0;155m\002${1:$i:1}"
    done

    return

#    for (( i=0; i<${#1}; i++ )); do
#        (( fg_green = 115 + RANDOM % 50 ))
#        printf "\001\x1b[38;2;255;${fg_green};0m\002"
#
#	(( offset = $i % 5 ))
#	(( $i % 5 )) || {
#	    (( bg_red_start  = bg_red_next ))
#            (( bg_red_next   = 55 + RANDOM % 200  ))
#	}
#	(( $i + 5 >= ${#1} )) && (( bg_red_next   = 50  )) 
#	if (( $i + 5 <= ${#1} ))
#       	then
#	    (( bg_red   = (($bg_red_next-$bg_red_start)/5)*$offset + $bg_red_start ))
#            printf "\001\x1b[48;2;${bg_red};0;0m\002${1:$i:1}"
#        else 
#	    (( bg_red   = (($bg_red_next-$bg_red_start)/6)*$offset + $bg_red_start ))
#	    (( bg_blue = ((50-0)/5)*$offset + 0 ))
#            printf "\001\x1b[48;2;${bg_red};${bg_blue};${bg_blue}m\002${1:$i:1}"
#	fi
#    done
}

PS1='\[\033[01;31m\]$(kcp "[\u@\h \W]\$")\[\033[0m\] '
